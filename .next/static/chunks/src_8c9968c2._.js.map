{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/supabaseClient.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || '';\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || '';\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n"],"names":[],"mappings":";;;AAEoB;AAFpB;;AAEA,MAAM,cAAc,wEAAwC;AAC5D,MAAM,kBAAkB,qDAA6C;AAE9D,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/resources/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { supabase } from \"../../lib/supabaseClient\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n} from \"../../components/ui/card\";\nimport { Button } from \"../../components/ui/button\";\n\ninterface Resource {\n  id: string;\n  title: string;\n  description: string;\n  type: \"pdf\" | \"video\" | \"mock_test\";\n  url: string;\n  created_at: string;\n}\n\nexport default function ResourcesPage() {\n  const [resources, setResources] = useState<Resource[]>([]);\n  const [isAdmin, setIsAdmin] = useState(false); // In a real app, this would be determined by auth\n  const [loading, setLoading] = useState(true);\n  const [newResource, setNewResource] = useState({\n    title: \"\",\n    description: \"\",\n    type: \"pdf\" as Resource[\"type\"],\n    url: \"\",\n  });\n\n  useEffect(() => {\n    fetchResources();\n  }, []);\n\n  const fetchResources = async () => {\n    try {\n      const { data, error } = await supabase\n        .from(\"resources\")\n        .select(\"*\")\n        .order(\"created_at\", { ascending: false });\n\n      if (error) throw error;\n      setResources(data || []);\n    } catch (error) {\n      console.error(\"Error fetching resources:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const { error } = await supabase.from(\"resources\").insert([\n        {\n          ...newResource,\n          created_at: new Date().toISOString(),\n        },\n      ]);\n\n      if (error) throw error;\n\n      setNewResource({\n        title: \"\",\n        description: \"\",\n        type: \"pdf\",\n        url: \"\",\n      });\n      fetchResources();\n    } catch (error) {\n      console.error(\"Error adding resource:\", error);\n    }\n  };\n\n  const ResourceCard = ({ resource }: { resource: Resource }) => {\n    const isYouTubeVideo = resource.type === \"video\" && resource.url.includes(\"youtube.com\");\n\n    return (\n      <Card>\n        <CardContent className=\"pt-6\">\n          <h3 className=\"text-lg font-medium mb-2\">{resource.title}</h3>\n          <p className=\"text-gray-600 mb-4\">{resource.description}</p>\n          \n          {isYouTubeVideo ? (\n            <div className=\"aspect-video mb-4\">\n              <iframe\n                width=\"100%\"\n                height=\"100%\"\n                src={resource.url.replace(\"watch?v=\", \"embed/\")}\n                title={resource.title}\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n              />\n            </div>\n          ) : (\n            <Button asChild className=\"w-full\">\n              <a href={resource.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {resource.type === \"pdf\" ? \"Download PDF\" : \"Take Mock Test\"}\n              </a>\n            </Button>\n          )}\n          \n          <p className=\"text-sm text-gray-500 mt-4\">\n            Added on {new Date(resource.created_at).toLocaleDateString()}\n          </p>\n        </CardContent>\n      </Card>\n    );\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto space-y-8\">\n      {isAdmin && (\n        <Card>\n          <CardHeader>\n            <CardTitle>Add Resource</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div>\n                <label className=\"block mb-2 font-medium\">Title</label>\n                <input\n                  type=\"text\"\n                  value={newResource.title}\n                  onChange={(e) =>\n                    setNewResource({ ...newResource, title: e.target.value })\n                  }\n                  required\n                  className=\"w-full border border-gray-300 rounded px-3 py-2\"\n                  placeholder=\"Enter resource title\"\n                />\n              </div>\n              <div>\n                <label className=\"block mb-2 font-medium\">Description</label>\n                <textarea\n                  value={newResource.description}\n                  onChange={(e) =>\n                    setNewResource({ ...newResource, description: e.target.value })\n                  }\n                  required\n                  rows={3}\n                  className=\"w-full border border-gray-300 rounded px-3 py-2\"\n                  placeholder=\"Enter resource description\"\n                />\n              </div>\n              <div>\n                <label className=\"block mb-2 font-medium\">Type</label>\n                <select\n                  value={newResource.type}\n                  onChange={(e) =>\n                    setNewResource({\n                      ...newResource,\n                      type: e.target.value as Resource[\"type\"],\n                    })\n                  }\n                  required\n                  className=\"w-full border border-gray-300 rounded px-3 py-2\"\n                >\n                  <option value=\"pdf\">PDF</option>\n                  <option value=\"video\">Video</option>\n                  <option value=\"mock_test\">Mock Test</option>\n                </select>\n              </div>\n              <div>\n                <label className=\"block mb-2 font-medium\">URL</label>\n                <input\n                  type=\"url\"\n                  value={newResource.url}\n                  onChange={(e) =>\n                    setNewResource({ ...newResource, url: e.target.value })\n                  }\n                  required\n                  className=\"w-full border border-gray-300 rounded px-3 py-2\"\n                  placeholder=\"Enter resource URL\"\n                />\n              </div>\n              <Button type=\"submit\" className=\"w-full\">\n                Add Resource\n              </Button>\n            </form>\n          </CardContent>\n        </Card>\n      )}\n\n      <div className=\"grid grid-cols-1 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Study Materials</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {loading ? (\n                <p>Loading resources...</p>\n              ) : (\n                resources\n                  .filter((r) => r.type === \"pdf\")\n                  .map((resource) => (\n                    <ResourceCard key={resource.id} resource={resource} />\n                  ))\n              )}\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Video Lectures</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {loading ? (\n                <p>Loading resources...</p>\n              ) : (\n                resources\n                  .filter((r) => r.type === \"video\")\n                  .map((resource) => (\n                    <ResourceCard key={resource.id} resource={resource} />\n                  ))\n              )}\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Mock Tests</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {loading ? (\n                <p>Loading resources...</p>\n              ) : (\n                resources\n                  .filter((r) => r.type === \"mock_test\")\n                  .map((resource) => (\n                    <ResourceCard key={resource.id} resource={resource} />\n                  ))\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}